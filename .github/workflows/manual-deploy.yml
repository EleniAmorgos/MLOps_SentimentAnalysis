name: Manual Deploy Request

on: 
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment name'
        required: true
        default: 'Production'
      isProduction:
        description: 'Is this a prodution environment?'
        required: true
        default: 'true'
jobs:
  deploy:
    name: Create Deployment
    runs-on: ubuntu-latest

    steps:        
      - name: Get temporary token for creating deployment
        id: temp_token
        uses: peter-murray/workflow-application-token-action@v1.0.3
        with:
          application_id: ${{ secrets.DEPLOYMENT_TOKEN_APP_ID }}
          application_private_key: ${{ secrets.DEPLOYMENT_TOKEN_APP_KEY }}
          
      - name: Create Deployment
        id: create_deployment
        uses: actions/github-script@v3
        env:
          container_registry_url: ghcr.io
          container_image: octodemo/devoxx-2021:master
          environment: ${{ github.event.inputs.environment }}
          isProduction: ${{ github.event.inputs.isProduction }}
        with:
          github-token: ${{ steps.temp_token.outputs.token }}
          script: |
            const isProduction = process.env.isProduction.toLowerCase() === 'true'
            const deploymentPayload = {
                  container_registry: process.env.container_registry_url,
                  container_image: process.env.container_image,
                  environment: process.env.environment,
                  ref: context.ref,
                }
              ;
            await github.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref,
              auto_merge: false,
              required_contexts: [],
              payload: JSON.stringify(deploymentPayload),
              environment: process.env.environment,
              description: `Deploy Pull Request to ${process.env.environment}`,
              transient_environment: !isProduction,
              production_environment: isProduction,
              mediaType: { previews: ["flash-preview", "ant-man"] }
            });